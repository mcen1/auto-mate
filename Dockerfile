FROM alpine:latest

RUN mkdir -p /usr/portal

WORKDIR /usr/portal
COPY ./src /usr/portal
COPY ./requirements.txt /usr/portal/requirements.txt
COPY ./ssl/ca-cert.pem /usr/local/share/ca-certificates/my-cert.crt

RUN --mount=type=secret,id=CONTAINERIMGVERSION  \
    export CONTAINERIMGVERSION=$(cat /run/secrets/CONTAINERIMGVERSION) && \
    cat /usr/local/share/ca-certificates/my-cert.crt >> /etc/ssl/certs/ca-certificates.crt && \
    apk --no-cache add libcap dcron coreutils python3 py3-pip curl busybox-extras jq && \
    apk --no-cache add --virtual build-dependencies build-base python3-dev && \
    apk --no-cache add iputils && \
    sed -i "s/LOCALTESTING/$CONTAINERIMGVERSION/" /usr/portal/templates/tag.html && \
    pip3 install --upgrade pip && \
    pip3 install -r requirements.txt && \
    ls -l /var/run/secrets && \
    apk add git && \
    apk del build-dependencies && \
    python3 dbops.py && \
    ls -la && \
    python3 jsoncheck.py json/ && \
    python3 jsoncheck.py external_links/ && \
# this will be dynamic and moved to /usr/portal/startup.sh
#    python3 createroutesfromjson.py > autogeneratedroutes.py  && \
    mv refreshsnow /etc/periodic/daily/refreshsnow && \
    addgroup -S portal && \ 
    adduser -S portal -G portal && \
    chown portal:portal /usr/sbin/crond && \
    setcap cap_setgid=ep /usr/sbin/crond && \
    chown -R portal: /usr/portal/ && \
    # initialize db in container
    ls -la /usr/portal


WORKDIR /usr/portal/

EXPOSE 8000

USER portal

#CMD ["gunicorn", "-w", "4", "-b", "0.0.0.0:8000", "wsgi:app"]
CMD ["/bin/sh","/usr/portal/startup.sh"]


